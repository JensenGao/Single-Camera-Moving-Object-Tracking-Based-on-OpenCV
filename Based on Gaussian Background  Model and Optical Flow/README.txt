这个.txt文件是对本程序的功能及作用的说明：
这个程序用于目标追踪；
具体过程如下：
最开始使用光流法提取目标前景，后面的步骤进入了高斯模型：
1、读入视频（可以是本地视频，也可以是摄像头读入的视频）后，
   利用FlowFarneback算法计算视频的光流；由于计算光流比较耗时，所以在计算光流之前将原始图像缩小为原来的1/4，
   加快处理速度，以达到实时的目的。
2、（1）将缩小的图像先用高斯背景模型获得前景图像；
   （2）将缩小的图像转换为灰度图，计算光流，计算出图像的光流之后，将光流图转换为灰度图，再进行阈值处理（这里的阈值要自己调，看在什么阈值范围效果最好）得到目标前景；
3（1）将第2步的两种方法得到的图像用“与（&）”运算融合，得到两种方法获得的前景图的公共部分；
 （2）再对得到的前景进行滤波去除噪声；
4、去除噪声后，对目标前景进行形态学滤波处理（膨胀去除孔洞，腐蚀去除噪点），得到比较好的目标前景；
5、查找处理好的前景的轮廓，并对轮廓按面积大小从大到小进行排序；
6、剔除面积较小的轮廓，获得剩余轮廓的外接矩形，将其作为后面求图像直方图的掩码；
7、将读进来的帧转换为HSV颜色空间,求得掩码范围内的 H通道直方图（因为CamShift是根据颜色属性进行追踪）；
8、根据上面求得的直方图在hsv颜色空间的图像上求取反向映射；
9、最后将第4步中的矩形（初始化位置）和第6步中的反向映射作为CamShift追踪的参数,进行追踪；
10、将原轮廓外接矩形和CamShift返回的旋转矩形（不是水平的）的外接矩形，进行与运算得到的最终的矩形就是追踪的结果；
   上面2-8步都是在缩小的帧中进行处理。 
11、将得到的结果绘制到原始帧中；
   这一步是将在缩小的帧中找到的目标再还原到原始帧的大小再绘制到原始帧中！
12、程序运行结束！
